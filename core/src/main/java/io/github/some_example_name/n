package io.github.some_example_name;

import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.utils.Array;

public class Player {
    private float x, y;
    private int size;
    private float velocityY;
    private boolean isJumping;
    private float gravity = -0.876f;
    private final float jumpVel = 15f;
    private Platform currentPlatform;
    private float rotation = 0;
    private float rotationSpeed = 0;

    // Trail-related fields
    private Array<Trail> trails;
    private float trailTimer = 0;
    private static final float TRAIL_SPAWN_INTERVAL = 0.05f; // Spawn a trail every 0.05 seconds

    public Player(int x, int y, int size) {
        this.x = x;
        this.y = y;
        this.size = size;
        this.velocityY = 0;
        this.isJumping = false;
        this.trails = new Array<>();
    }

    public Array<Trail> getTrails() {
        return trails;
    }

    // Existing methods remain the same...

    public void update(float deltaTime, Array<Platform> platforms, int groundLevel) {
        // Existing update logic...

        // Trail management
        updateTrails(deltaTime, x, y, size, rotation);
    }

    private void updateTrails(float deltaTime, float playerX, float playerY, float playerSize, float playerRotation) {
        // Update existing trails
        for (int i = trails.size - 1; i >= 0; i--) {
            Trail trail = trails.get(i);
            trail.update(deltaTime);

            if (trail.isExpired()) {
                trails.removeIndex(i);
            }
        }

        // Spawn new trails periodically
        trailTimer += deltaTime;
        if (trailTimer >= TRAIL_SPAWN_INTERVAL) {
            trails.add(new Trail(
                playerX + playerSize / 2,
                playerY + playerSize / 2,
                playerSize,
                playerRotation
            ));
            trailTimer = 0;
        }
    }

    // Existing methods remain the same...
}
